---
# tasks file for docker_toolbox(On Linux)
- block:
  - name: Download install script for Docker Engine with get_url module
    get_url: url="https://get.docker.com" dest="{{ docker_installscript_tmppath }}"
    when: "{{ ansible_python_version | version_compare('2.7.9', '>=') }}"
  # get_url module on Python(< 2.7.9) cause SSL error
  - block:
      - name: Check whether install script for Docker Engine exists
        stat: path="{{ docker_installscript_tmppath }}"
        register: st_result_docker
        changed_when: no
      - name: Download install script for Docker Engine with curl
        command: "curl https://get.docker.com -o {{ docker_installscript_tmppath }}"
        when: not st_result_docker.stat.exists
    when: "{{ ansible_python_version | version_compare('2.7.9', '<') }}"
  - name: Check whether Docker Engine is installed
    command: "which docker"
    register: which_docker
    changed_when: no
    ignore_errors: yes
  - name: Install Docker Engine
    shell: "sh {{ docker_installscript_tmppath }}"
    become: yes
    when: which_docker.rc != 0

  # ATTENTION: These tasks requires that target environment uses systemd.
  - block:
    - name: Create a directory for systemd setting
      file:
        path: '/etc/systemd/system/docker.service.d'
        state: 'directory'
    - name: Set options of Docker deamon in systemd setting
      template:
        src: 'docker.service'
        dest: '/etc/systemd/system/docker.service.d/docker.conf'
    become: yes
    when: docker_daemon_options is defined

  # ATTENTION: This task is for backward compatibility when target environment doesn't use Systemd.
  # Ref. https://docs.docker.com/engine/admin/configuring/#/ubuntu
  # But this isn't tested well.
  - block:
    - name: Check whether /etc/default/docker exists
      stat:
        path: '/etc/default/docker'
      register: stat_default_docker
      changed_when: no
    - name: Set options of Docker deamon in Upstart setting
      lineinfile:
        dest: '/etc/default/docker'
        line: "DOCKER_OPTS=\"{{ docker_daemon_options }}\""
      when: stat_default_docker.stat.exists
    become: yes
    when: docker_daemon_options is defined

  # ATTENTION: This task is for backward compatibility when target environment doesn't use Systemd.
  # Ref. https://docs.docker.com/engine/admin/configuring/#/centos-red-hat-enterprise-linux-fedora
  # Ref. http://qiita.com/okamu_/items/d9d3f825a8afc3f14c32
  # But this isn't tested well.
  - block:
    - name: Check whether /etc/sysconfig/docker exists
      stat:
        path: '/etc/sysconfig/docker'
      register: stat_sysconfig_docker
      changed_when: no
    - name: Set options of Docker deamon in setting under sysconfig directory
      lineinfile:
        dest: '/etc/sysconfig/docker'
        # CentOS6: other_args
        # Amazon Linux: OPTIONS
        regexp: '^(other_args|OPTIONS)=".*"$'
        line: "\\1=\"{{ docker_daemon_options }}\""
        backrefs: yes
      when: stat_sysconfig_docker.stat.exists
    become: yes
    when: docker_daemon_options is defined

- block:
  - name: Install Docker Machine
    get_url: url="{{ docker_machine_download_url }}" checksum="sha256:{{ docker_machine_sha256 }}" dest="{{ docker_machine_bin_path }}" mode="0755"
    become: yes
    when: "{{ ansible_python_version | version_compare('2.7.9', '>=') }}"
  # get_url module on Python(< 2.7.9) cause SSL error
  - block:
      - name: Check whether Docker Machine exists
        stat: path="{{ docker_machine_bin_path }}"
        register: st_result_docker_machine
        changed_when: no
      - name: Download Docker Machine binary with curl
        command: "curl {{ docker_machine_download_url }} -o {{ docker_machine_bin_path }}"
        become: yes
        when: not st_result_docker_machine.stat.exists
      - name: Make Docker Machine binary executable
        file: path="{{ docker_machine_bin_path }}" mode="0755"
        become: yes
    when: "{{ ansible_python_version | version_compare('2.7.9', '<') }}"
  when: "docker_install_machine|bool"
- block:
  - name: Install Docker Compose
    get_url: url="{{ docker_compose_download_url }}" checksum="sha256:{{ docker_compose_sha256 }}" dest="{{ docker_compose_bin_path }}" mode="0755"
    become: yes
    when: "{{ ansible_python_version | version_compare('2.7.9', '>=') }}"
  # get_url module on Python(< 2.7.9) cause SSL error
  - block:
      - name: Check whether Docker Compose exists
        stat: path="{{ docker_compose_bin_path }}"
        register: st_result_docker_compose
        changed_when: no
      - name: Download Docker Compose binary with curl
        command: "curl {{ docker_compose_download_url }} -o {{ docker_compose_bin_path }}"
        become: yes
        when: not st_result_docker_compose.stat.exists
      - name: Make Docker Compose binary executable
        file: path="{{ docker_compose_bin_path }}" mode="0755"
        become: yes
    when: "{{ ansible_python_version | version_compare('2.7.9', '<') }}"
  when: "docker_install_compose|bool"
